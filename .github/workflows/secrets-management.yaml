name: AWS Secrets Management Example

on:
  workflow_dispatch:
    inputs:
      secret-action:
        type: choice
        description: 'The action to perform'
        required: true
        options:
          - 'put-secret'
          - 'update-secret'
          - 'delete-secret'
      secret-name:
        description: 'The name of the secret to retrieve'
        required: true
        default: ""
      secret-description:
        description: 'The description of the secret'
        required: false
        default: ""

permissions:
  id-token: write # This is required for requesting the JWT

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ASSUME_OIDC_ROLE: ${{ secrets.AWS_ACCOUNT_ASSUME_OIDC_ROLE }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Change underscore to slash and lower to upper case
        id: change-underscore-to-slash
        shell: bash
        run: |
          echo "SSM_SECRET_NAME::$(echo ${{ github.event.inputs.secret-name }} | tr _ / | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: ${{ env.AWS_ACCOUNT_ID }}-secrets-management
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ASSUME_OIDC_ROLE }}

      - name: Check if the secret exists
        id: check-secret
        shell: bash
        run: |
          set +e
          aws secretsmanager describe-secret --secret-id ${{ env.SSM_SECRET_NAME }} > /dev/null 2>&1
          if [ $? -eq 0 ]; then
            echo "SECRET_EXISTS=true" >> $GITHUB_ENV
          else
            echo "SECRET_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Put secret into the AWS Secrets Manager
        if: ${{ github.event.inputs.secret-action }} == 'put-secret'
        shell: bash
        run: |
          if [ ${{ env.SECRET_EXISTS }} == "true" ]; then
            echo "The secret already exists. Please use the 'update-secret' action to update the secret."
          else
            aws secretsmanager create-secret --name ${{ env.SSM_SECRET_NAME }} --description ${{ github.event.inputs.secret-description }} --secret-string ${{ secrets[github.event.inputs.secret-name] }}
          fi

      - name: Update secret in the AWS Secrets Manager
        if: ${{ github.event.inputs.secret-action }} == 'update-secret'
        shell: bash
        run: |
          if [ ${{ env.SECRET_EXISTS }} == "false" ]; then
            echo "The secret does not exist. Please use the 'put-secret' action to put the secret."
          else
            aws secretsmanager update-secret --secret-id ${{ env.SSM_SECRET_NAME }} --description ${{ github.event.inputs.secret-description }} --secret-string ${{ secrets[github.event.inputs.secret-name] }}
          fi

      - name: Delete secret from the AWS Secrets Manager
        if: ${{ github.event.inputs.secret-action }} == 'delete-secret'
        shell: bash
        run: |
          if [ ${{ env.SECRET_EXISTS }} == "false" ]; then
            echo "The secret does not exist."
          else
            aws secretsmanager delete-secret --secret-id ${{ env.SSM_SECRET_NAME }} --recovery-window-in-days 7
          fi
